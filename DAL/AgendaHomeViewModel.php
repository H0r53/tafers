<?php
/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			6/18/2018
Description:	Creates the DAL class for  AgendaHomeViewModel table and respective stored procedures

*/



class AgendaHomeViewModel {

	// This is for local purposes only! In hosted environments the db_settings.php file should be outside of the webroot, such as: include("/outside-webroot/db_settings.php");
	protected static function getDbSettings() { return "DAL/db_localsettings.php"; }

	/******************************************************************/
	// Properties
	/******************************************************************/

	protected $toDoItemId;
	protected $priorityId;
	protected $createdByUserId;
	protected $createDate;
	protected $title;
	protected $summary;
	protected $closedByUserId;
	protected $closedDate;
	protected $createdByImgUrl;
	protected $createdByUsername;


	/******************************************************************/
	// Constructors
	/******************************************************************/
	public function __construct() {
		$argv = func_get_args();
		switch( func_num_args() ) {
			case 0:
				self::__constructBase();
				break;
			case 10:
				self::__constructFull( $argv[0], $argv[1], $argv[2], $argv[3], $argv[4], $argv[5], $argv[6], $argv[7], $argv[8], $argv[9] );
		}
	}


	public function __constructBase() {
		$this->toDoItemId = 0;
		$this->priorityId = 0;
		$this->createdByUserId = 0;
		$this->createDate = "";
		$this->title = "";
		$this->summary = "";
		$this->closedByUserId = 0;
		$this->closedDate = "";
		$this->createdByImgUrl = "";
		$this->createdByUsername = "";
	}

	public function __constructFull($paramToDoItemId,$paramPriorityId,$paramCreatedByUserId,$paramCreateDate,$paramTitle,$paramSummary,$paramClosedByUserId,$paramClosedDate,$paramCreatedByImgUrl,$paramCreatedByUsername) {
		$this->toDoItemId = $paramToDoItemId;
		$this->priorityId = $paramPriorityId;
		$this->createdByUserId = $paramCreatedByUserId;
		$this->createDate = $paramCreateDate;
		$this->title = $paramTitle;
		$this->summary = $paramSummary;
		$this->closedByUserId = $paramClosedByUserId;
		$this->closedDate = $paramClosedDate;
		$this->createdByImgUrl = $paramCreatedByImgUrl;
		$this->createdByUsername = $paramCreatedByUsername;
	}


	/******************************************************************/
	// Accessors / Mutators
	/******************************************************************/

	public function getToDoItemId(){
		return $this->toDoItemId;
	}
	public function setToDoItemId($value){
		$this->toDoItemId = $value;
	}
	public function getPriorityId(){
		return $this->priorityId;
	}
	public function setPriorityId($value){
		$this->priorityId = $value;
	}
	public function getCreatedByUserId(){
		return $this->createdByUserId;
	}
	public function setCreatedByUserId($value){
		$this->createdByUserId = $value;
	}
	public function getCreateDate(){
		return $this->createDate;
	}
	public function setCreateDate($value){
		$this->createDate = $value;
	}
	public function getTitle(){
		return $this->title;
	}
	public function setTitle($value){
		$this->title = $value;
	}
	public function getSummary(){
		return $this->summary;
	}
	public function setSummary($value){
		$this->summary = $value;
	}
	public function getClosedByUserId(){
		return $this->closedByUserId;
	}
	public function setClosedByUserId($value){
		$this->closedByUserId = $value;
	}
	public function getClosedDate(){
		return $this->closedDate;
	}
	public function setClosedDate($value){
		$this->closedDate = $value;
	}
	public function getCreatedByImgUrl(){
		return $this->createdByImgUrl;
	}
	public function setCreatedByImgUrl($value){
		$this->createdByImgUrl = $value;
	}
	public function getCreatedByUsername(){
		return $this->createdByUsername;
	}
	public function setCreatedByUsername($value){
		$this->createdByUsername = $value;
	}
	
	/******************************************************************/
    // Public Methods
    /******************************************************************/

    public static function loadAgendaHome($paramPriorityId,$paramIsOpen,$paramOffset) {
        include(self::getDbSettings());
        $conn = new mysqli($servername, $username, $password, $dbname);
        $stmt = $conn->prepare('CALL usp_ViewModel_LoadAgendaHome(?,?,?)');
        $arg1 = $paramPriorityId;
        $arg2 = $paramIsOpen;
        $arg3 = $paramOffset;
        $stmt->bind_param('iii',$arg1,$arg2,$arg3);
        $stmt->execute();

        $result = $stmt->get_result();
        if (!$result) die($conn->error);
        if ($result->num_rows > 0) {
            $arr = array();

            while ($row = $result->fetch_assoc()) {
                $item = new AgendaHomeViewModel($row['toDoItemId'],$row['priorityId'],$row['createdByUserId'],$row['createDate'],$row['title'],$row['summary'],$row['closedByUserId'],$row['closedDate'],
                                $row['createdByImgUrl'],$row['createdByUsername']);
                $arr[] = $item;
            }
            return $arr;
        }
        else {
            $arr = array();
            return $arr;
        }
    }

}
