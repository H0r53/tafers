<?php
/*
Author:			This code was generated by DALGen Web available at https://dalgen.opendevtools.org
Date:			11/01/2019
Description:		Creates the BlogViewModel class with methods for interacting with respective stored procedures

*/

class BlogHomeViewModel {

	// This is for local purposes only! In hosted environments the db_settings.php file should be outside of the webroot, such as: include("/outside-webroot/db_settings.php");
	protected static function getDbSettings() { return "DAL/db_localsettings.php"; }

	/******************************************************************/
	// Properties
	/******************************************************************/

	protected $blogId;
	protected $blogCreatedByUsername;
	protected $blogCreateDate;
	protected $blogMessage;
	protected $blogBandId;
	protected $blogUserImgUrl;
    protected $blogLiked;
    protected $blogLikeCount;


	/******************************************************************/
	// Constructors
	/******************************************************************/
	public function __construct() {
		$argv = func_get_args();

		switch( func_num_args() ) {
			case 0:
				self::__constructBase();
				break;
			case 1:
				self::__constructPK( $argv[0] );
				break;
			case 8:
				self::__constructFull($argv[0], $argv[1], $argv[2], $argv[3], $argv[4], $argv[5], $argv[6], $argv[7]);
		}
	}


	public function __constructBase() {
		$this->blogId = 0;
		$this->blogCreatedByUsername = '';
		$this->blogCreateDate = '';
		$this->blogMessage = '';
		$this->blogBandId = 0;
		$this->blogUserImgUrl = '';
        $this->blogLiked = 0;
        $this->blogLikeCount = 0;
	}

	public function __constructPK($paramId) {
		$this->load($paramId);
	}

	public function __constructFull($paramBlogId, $paramBlogCreatedByUsername, $paramBlogCreateDate, $paramBlogMessage, $paramBlogBandId, $paramBlogUserImgUrl, $paramBlogLiked,$paramBlogLikeCount){
		$this->blogId = $paramBlogId;
		$this->blogCreatedByUsername = $paramBlogCreatedByUsername;
		$this->blogCreateDate = $paramBlogCreateDate;
		$this->blogMessage = $paramBlogMessage;
		$this->blogBandId = $paramBlogBandId;
		$this->blogUserImgUrl = $paramBlogUserImgUrl;
		$this->blogLiked = $paramBlogLiked;
		$this->blogLikeCount = $paramBlogLikeCount;
	}


	/******************************************************************/
	// Accessors / Mutators
	/******************************************************************/
	public function getBlogId(){
		return $this->blogId;
	}
	public function setBlogId($value){
		 $this->blogId = $value;
	}
	public function getBlogCreatedByUsername(){
		return $this->blogCreatedByUsername;
	}
	public function setBlogCreatedByUsername($value){
		 $this->blogCreatedByUsername = $value;
	}
	public function getBlogCreateDate(){
		return $this->blogCreateDate;
	}
	public function setBlogCreateDate($value){
		 $this->blogCreateDate = $value;
	}
	public function getBlogMessage(){
		return $this->blogMessage;
	}
	public function setBlogMessage($value){
		 $this->blogMessage = $value;
	}
	public function getBlogBandId(){
		return $this->blogBandId;
	}
	public function setBlogBandId($value){
		 $this->blogBandId = $value;
	}
	public function getBlogUserImgUrl(){
		return $this->blogUserImgUrl;
	}
	public function setBlogUserImgUrl($value){
		 $this->blogUserImgUrl = $value;
	}
	public function getBlogLiked(){
		return $this->blogLiked;
	}
	public function setBlogLiked($value){
		 $this->blogLiked = $value;
	}
    public function getBlogLikeCount(){
		return $this->blogLikeCount;
	}
	public function setBlogLikeCount($value){
		 $this->blogLikeCount = $value;
	}

    public static function loadBlogHome($paramBandId,$paramOffset) {
        include(self::getDbSettings());
        $conn = new mysqli($servername, $username, $password, $dbname);
        $stmt = $conn->prepare('CALL usp_ViewModel_LoadBlogHome(?,?)');
        $arg1 = $paramBandId;
        $arg2 = $paramOffset;
        $stmt->bind_param('ii',$arg1,$arg2);
        $stmt->execute();

        $result = $stmt->get_result();
        if (!$result) die($conn->error);
        if ($result->num_rows > 0) {
            $arr = array();

            while ($row = $result->fetch_assoc()) {
                $item = new BlogHomeViewModel($row['blogId'],$row['createdByUsername'],$row['createDate'],$row['message'],$row['bandId'],$row['imgurl'],$row['liked'],$row['likecount']);
                $arr[] = $item;
            }
            return $arr;
        }
        else {
            $arr = array();
            return $arr;
        }
    }

}