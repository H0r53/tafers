/*
Author:			This code was generated by DALGen Web available at https://dalgen.opendevtools.org
Date:			11/02/2019
Description:		Creates the BlogLike table and respective stored procedures

*/

USE tafers;

-- Overwrite existing objects that conflict. 
-- WARNING: To avoid loss of data please prepare a backup if necessary

DROP TABLE IF EXISTS `tafers`.`BlogLike`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_BlogLike_LoadAll`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_BlogLike_Search`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_BlogLike_Add`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_BlogLike_Load`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_BlogLike_Delete`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_BlogLike_Update`;


-- Create Table 

CREATE TABLE `tafers`.`BlogLike` (
blogId INT,
userId INT,
createDate DATETIME,
CONSTRAINT fk_BlogLike_blogId_Blog_id FOREIGN KEY (blogId) REFERENCES Blog (id),
CONSTRAINT fk_BlogLike_userId_User_id FOREIGN KEY (userId) REFERENCES User (id)
);


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_BlogLike_LoadAll`
(
)
BEGIN
	SELECT
		`BlogLike`.`blogId` AS `blogId`,
		`BlogLike`.`userId` AS `userId`,
		`BlogLike`.`createDate` AS `createDate`
	FROM `BlogLike`;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_BlogLike_Add`
(
	IN paramblogId INT,
	IN paramuserId INT
)
BEGIN
	INSERT INTO `BlogLike` (blogId,userId,createDate)
	VALUES (paramblogId,paramuserId,NOW());
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_BlogLike_Delete`
(
	IN paramblogId INT,
	IN paramuserId INT
)
BEGIN
	DELETE FROM `BlogLike`
	WHERE `BlogLike`.`blogId` = paramblogId
	AND `BlogLike`.`userId` = paramuserId;
		
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_BlogLike_Search`
(
	IN paramblogId INT,
	IN paramuserId INT,
	IN paramcreateDate DATETIME
)
BEGIN
	SELECT
		`BlogLike`.`blogId` AS `blogId`,
		`BlogLike`.`userId` AS `userId`,
		`BlogLike`.`createDate` AS `createDate`
	FROM `BlogLike`
	WHERE 
		COALESCE(`BlogLike`.`blogId`,0) = COALESCE(paramblogId,`BlogLike`.`blogId`,0)
		 AND COALESCE(`BlogLike`.`userId`,0) = COALESCE(paramuserId,`BlogLike`.`userId`,0)
		 AND COALESCE(CAST(`BlogLike`.`createDate` AS DATE),'') = COALESCE(CAST(paramcreateDate AS DATE),CAST(`BlogLike`.`createDate` AS DATE),CAST(NOW() AS DATE));
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_BlogLike_Toggle`
(
        IN paramblogId INT,
        IN paramuserId INT
)
BEGIN
	IF 	(SELECT COUNT(*) FROM `BlogLike`
        	WHERE `BlogLike`.`blogId` = paramblogId
        	AND `BlogLike`.`userId` = paramuserId)
		> 0
	THEN
	        DELETE FROM `BlogLike`
	        WHERE `BlogLike`.`blogId` = paramblogId
        	AND `BlogLike`.`userId` = paramuserId;
	ELSE
	        INSERT INTO `BlogLike` (blogId,userId,createDate)
        	VALUES (paramblogId,paramuserId,NOW());
	END IF;

END //
DELIMITER ;


