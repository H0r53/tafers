/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			6/8/2018
Description:	Creates the ToDoItem table and respective stored procedures

*/


USE tafers;



-- ------------------------------------------------------------
-- Drop existing objects
-- ------------------------------------------------------------

DROP TABLE IF EXISTS `tafers`.`ToDoItem`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoItem_Load`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoItem_LoadAll`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoItem_Add`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoItem_Update`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoItem_Delete`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoItem_Search`;


-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `tafers`.`ToDoItem` (
id INT,
priorityId INT,
createdByUserId INT,
createDate DATETIME,
title VARCHAR(256),
summary VARCHAR(2046),
closedByUserId INT,
closedDate DATETIME,
CONSTRAINT pk_ToDoItem_id PRIMARY KEY (id),
CONSTRAINT fk_ToDoItem_priorityId_ToDoPriority_id FOREIGN KEY (priorityId) REFERENCES ToDoPriority (id),
CONSTRAINT fk_ToDoItem_createdByUserId_User_id FOREIGN KEY (createdByUserId) REFERENCES User (id),
CONSTRAINT fk_ToDoItem_closedByUserId_User_id FOREIGN KEY (closedByUserId) REFERENCES User (id)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoItem_Load`
(
	 IN paramid INT
)
BEGIN
	SELECT
		`ToDoItem`.`id` AS `id`,
		`ToDoItem`.`priorityId` AS `priorityId`,
		`ToDoItem`.`createdByUserId` AS `createdByUserId`,
		`ToDoItem`.`createDate` AS `createDate`,
		`ToDoItem`.`title` AS `title`,
		`ToDoItem`.`summary` AS `summary`,
		`ToDoItem`.`closedByUserId` AS `closedByUserId`,
		`ToDoItem`.`closedDate` AS `closedDate`
	FROM `ToDoItem`
	WHERE 		`ToDoItem`.`id` = paramid;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoItem_LoadAll`
()
BEGIN
	SELECT
		`ToDoItem`.`id` AS `id`,
		`ToDoItem`.`priorityId` AS `priorityId`,
		`ToDoItem`.`createdByUserId` AS `createdByUserId`,
		`ToDoItem`.`createDate` AS `createDate`,
		`ToDoItem`.`title` AS `title`,
		`ToDoItem`.`summary` AS `summary`,
		`ToDoItem`.`closedByUserId` AS `closedByUserId`,
		`ToDoItem`.`closedDate` AS `closedDate`
	FROM `ToDoItem`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoItem_Add`
(
	 IN parampriorityId INT,
	 IN paramcreatedByUserId INT,
	 IN paramcreateDate DATETIME,
	 IN paramtitle VARCHAR(256),
	 IN paramsummary VARCHAR(2046),
	 IN paramclosedByUserId INT,
	 IN paramclosedDate DATETIME
)
BEGIN
	INSERT INTO `ToDoItem` (priorityId,createdByUserId,createDate,title,summary,closedByUserId,closedDate)
	VALUES (parampriorityId, paramcreatedByUserId, paramcreateDate, paramtitle, paramsummary, paramclosedByUserId, paramclosedDate);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoItem_Update`
(
	IN paramid INT,
	IN parampriorityId INT,
	IN paramcreatedByUserId INT,
	IN paramcreateDate DATETIME,
	IN paramtitle VARCHAR(256),
	IN paramsummary VARCHAR(2046),
	IN paramclosedByUserId INT,
	IN paramclosedDate DATETIME
)
BEGIN
	UPDATE `ToDoItem`
	SET priorityId = parampriorityId
		,createdByUserId = paramcreatedByUserId
		,createDate = paramcreateDate
		,title = paramtitle
		,summary = paramsummary
		,closedByUserId = paramclosedByUserId
		,closedDate = paramclosedDate
	WHERE		`ToDoItem`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoItem_Delete`
(
	IN paramid INT
)
BEGIN
	DELETE FROM `ToDoItem`
	WHERE		`ToDoItem`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoItem_Search`
(
	IN paramid INT,
	IN parampriorityId INT,
	IN paramcreatedByUserId INT,
	IN paramcreateDate DATETIME,
	IN paramtitle VARCHAR(256),
	IN paramsummary VARCHAR(2046),
	IN paramclosedByUserId INT,
	IN paramclosedDate DATETIME
)
BEGIN
	SELECT
		`ToDoItem`.`id` AS `id`,
		`ToDoItem`.`priorityId` AS `priorityId`,
		`ToDoItem`.`createdByUserId` AS `createdByUserId`,
		`ToDoItem`.`createDate` AS `createDate`,
		`ToDoItem`.`title` AS `title`,
		`ToDoItem`.`summary` AS `summary`,
		`ToDoItem`.`closedByUserId` AS `closedByUserId`,
		`ToDoItem`.`closedDate` AS `closedDate`
	FROM `ToDoItem`
	WHERE
		COALESCE(ToDoItem.`id`,0) = COALESCE(paramid,ToDoItem.`id`,0)
		AND COALESCE(ToDoItem.`priorityId`,0) = COALESCE(parampriorityId,ToDoItem.`priorityId`,0)
		AND COALESCE(ToDoItem.`createdByUserId`,0) = COALESCE(paramcreatedByUserId,ToDoItem.`createdByUserId`,0)
		AND COALESCE(CAST(ToDoItem.`createDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramcreateDate AS DATE),CAST(ToDoItem.`createDate` AS DATE), CAST(NOW() AS DATE))
		AND COALESCE(ToDoItem.`title`,'') = COALESCE(paramtitle,ToDoItem.`title`,'')
		AND COALESCE(ToDoItem.`summary`,'') = COALESCE(paramsummary,ToDoItem.`summary`,'')
		AND COALESCE(ToDoItem.`closedByUserId`,0) = COALESCE(paramclosedByUserId,ToDoItem.`closedByUserId`,0)
		AND COALESCE(CAST(ToDoItem.`closedDate` AS DATE), CAST(NOW() AS DATE)) = COALESCE(CAST(paramclosedDate AS DATE),CAST(ToDoItem.`closedDate` AS DATE), CAST(NOW() AS DATE));
END //
DELIMITER ;


