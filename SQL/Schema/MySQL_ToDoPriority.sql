/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			6/8/2018
Description:	Creates the ToDoPriority table and respective stored procedures

*/


USE tafers;



-- ------------------------------------------------------------
-- Drop existing objects
-- ------------------------------------------------------------

DROP TABLE IF EXISTS `tafers`.`ToDoPriority`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoPriority_Load`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoPriority_LoadAll`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoPriority_Add`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoPriority_Update`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoPriority_Delete`;
DROP PROCEDURE IF EXISTS `tafers`.`usp_ToDoPriority_Search`;


-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `tafers`.`ToDoPriority` (
id INT AUTO_INCREMENT,
name VARCHAR(64),
CONSTRAINT pk_ToDoPriority_id PRIMARY KEY (id)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoPriority_Load`
(
	 IN paramid INT
)
BEGIN
	SELECT
		`ToDoPriority`.`id` AS `id`,
		`ToDoPriority`.`name` AS `name`
	FROM `ToDoPriority`
	WHERE 		`ToDoPriority`.`id` = paramid;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoPriority_LoadAll`
()
BEGIN
	SELECT
		`ToDoPriority`.`id` AS `id`,
		`ToDoPriority`.`name` AS `name`
	FROM `ToDoPriority`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoPriority_Add`
(
	 IN paramname VARCHAR(64)
)
BEGIN
	INSERT INTO `ToDoPriority` (name)
	VALUES (paramname);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoPriority_Update`
(
	IN paramid INT,
	IN paramname VARCHAR(64)
)
BEGIN
	UPDATE `ToDoPriority`
	SET name = paramname
	WHERE		`ToDoPriority`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoPriority_Delete`
(
	IN paramid INT
)
BEGIN
	DELETE FROM `ToDoPriority`
	WHERE		`ToDoPriority`.`id` = paramid;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `tafers`.`usp_ToDoPriority_Search`
(
	IN paramid INT,
	IN paramname VARCHAR(64)
)
BEGIN
	SELECT
		`ToDoPriority`.`id` AS `id`,
		`ToDoPriority`.`name` AS `name`
	FROM `ToDoPriority`
	WHERE
		COALESCE(ToDoPriority.`id`,0) = COALESCE(paramid,ToDoPriority.`id`,0)
		AND COALESCE(ToDoPriority.`name`,'') = COALESCE(paramname,ToDoPriority.`name`,'');
END //
DELIMITER ;


